trigger:
- talentx-CICD

pool:
  vmImage: 'ubuntu-latest'

variables:
  registry: "securewolf/talentx_app"
  registryCredential: 'talentxDHub'

stages:
- stage: Build
  jobs:
  - job: Build
    steps:
    - task: SonarQubePrepare@5
      inputs:
        SonarQube: 'SonarQubeConnection'
        scannerMode: 'Other'
    - task: Maven@3
      displayName: 'Build'
      inputs:
        goals: 'clean install -DskipTests'
        mavenOptions: '-Xmx3072m'

    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: '**/*.war'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
    - bash: ls -R $(System.DefaultWorkingDirectory)
 
    - task: PublishBuildArtifacts@1
      displayName: 'Archive Artifact'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'talentx'
        publishLocation: 'Container'

- stage: UnitTest
  dependsOn: CodeAnalysisWithSonarQube
  jobs:
  - job: UnitTest
    steps:
    - task: Maven@3
      displayName: 'Unit Test'
      inputs:
        goals: 'test'
        mavenOptions: '-Xmx3072m'

- stage: CheckstyleAnalysis
  dependsOn: UnitTest
  jobs:
  - job: CheckstyleAnalysis
    steps:
    - task: Maven@3
      displayName: 'Checkstyle Analysis'
      inputs:
        goals: 'checkstyle:checkstyle'
        mavenOptions: '-Xmx3072m'

- stage: CodeAnalysisWithSonarQube 
  dependsOn: Build
  jobs:
    - job: SonarAnalysis
      steps:
      - task: Maven@3
        displayName: 'SonarQube Analysis'
        inputs:
          goals: 'clean install sonar:sonar'
          mavenOptions: '-Dsonar.host.url=http://3.87.54.178:9000 -Dsonar.login=admin -Dsonar.password=Default@123456 -Dsonar.java.binaries=target/test-classes/com/talentx/account/controllerTest/'

- stage: BuildTalentxAppImage
  dependsOn: CodeAnalysisWithSonarqube 
  jobs:
  - job: BuildImage
    steps:
    - task: Docker@2
      displayName: 'Build Talentx App Image'
      inputs:
        command: 'build'
        Dockerfile: '**/Dockerfile'
        tags: '$(Build.BuildId)'
        
- stage: UploadImageToDockerhub
  dependsOn: BuildTalentxAppImage
  jobs:
  - job: UploadImage
    steps:
    - task: Docker@2
      displayName: 'Upload Image to Dockerhub'
      inputs:
        command: 'push'
        repository: '$(registry)'
        tags: 'latest'

- stage: RemoveOldAppImage
  dependsOn: UploadImageToDockerhub
  jobs:
  - job: RemoveImage
    steps:
    - task: PowerShell@2
      displayName: 'Remove Old App Image'
      inputs:
        targetType: 'inline'
        script: 'docker rmi $(registry):$(Build.BuildId)'

- stage: AppDeploymentOnK8s
  dependsOn: RemoveOldAppImage
  jobs:
  - deployment: DeployApp
    displayName: 'App Deployment on K8s'
    pool:
      vmImage: 'ubuntu-latest'
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: HelmInstaller@1
            inputs:
              helmVersionToInstall: 'latest'
              
          - task: HelmDeploy@0
            inputs:
              command: 'upgrade'
              chartType: 'Name'
              chartName: 'talentx-stack'
              releaseName: 'talentx-release'
              overrideValues: '--set appimage=$(registry):$(Build.BuildId)'
              namespace: 'prod'

